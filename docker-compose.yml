version: '3.8'

services:
  traefik:
    image: traefik:v2.9
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:8084"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=your-email@domain.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "8084:8084"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    restart: always
    image: frontend
    ports:
      - "8080:8080" # Ensures the app listens on 8081 inside the container
    environment:
      - PORT=8080
      - AUTH_API_ADDRESS=${AUTH_API_ADDRESS}
      - TODOS_API_ADDRESS=${TODOS_API_ADDRESS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`52.138.55.44`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    networks:
      - app-network

  auth-api:
    build:
      context: ./auth-api
    restart: always
    image: auth-api
    ports:
      - "8081:8081" # Ensures the app listens on 8081 inside the container
    environment:
      - PORT=8081 # Passes the correct port to Go app
      - JWT_SECRET=${JWT_SECRET}
      - USERS_API_ADDRESS=${USERS_API_ADDRESS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`52.138.55.44`)"
      - "traefik.http.routers.auth-api.entrypoints=websecure"
      - "traefik.http.routers.auth-api.tls.certresolver=myresolver"
    networks:
      - app-network

  todos-api:
    build:
      context: ./todos-api
    restart: always
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-api.rule=Host(`52.138.55.44`)"
      - "traefik.http.routers.todos-api.entrypoints=websecure"
      - "traefik.http.routers.todos-api.tls.certresolver=myresolver"
    networks:
      - app-network

  users-api:
    build:
      context: ./users-api
    restart: always
    image: auth-api
    ports:
      - "8083:8083" # Ensures the app listens on 8081 inside the container
    environment:
      - PORT=8083 # Passes the correct port to app
      - SERVER_PORT=${SERVER_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - USERS_API_URL: "http://users-api:8083"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-api.rule=Host(`52.138.55.44`)"
      - "traefik.http.routers.users-api.entrypoints=websecure"
      - "traefik.http.routers.users-api.tls.certresolver=myresolver"
    networks:
      - app-network

  log-message-processor:
    build:
      context: ./log-message-processor
    restart: always
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
    networks:
      - app-network

  redis-queue:
    image: redis:alpine
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge